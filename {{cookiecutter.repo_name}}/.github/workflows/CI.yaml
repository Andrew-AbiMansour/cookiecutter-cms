name: CI

on: [push]

jobs:
  test:

    runs-on: {{ '${{ matrix.os }}' }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

{% if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
    - name: Install testing dependencies
      shell: bash
      run: |
        python -m pip install -U pytest pytest-cov codecov
{% else %}
    - name: Create environment for package
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate
        conda info
        python devtools/scripts/create_conda_env.py -n=test -p={{ '${{ matrix.python-version }}' }} devtools/conda-envs/test_env.yaml
{% endif %}

    - name: Install package
      shell: bash
      run: |
{% if cookiecutter.dependency_source == 'Dependencies from pip only (no conda)' %}
        python -m pip install .
{% else %}
        eval "$(conda shell.bash hook)" && conda activate test
        python -m pip install . --no-deps
        conda list --show-channel-urls
{% endif %}

    - name: Run tests
      shell: bash
      run: |
{% if cookiecutter.dependency_source != 'Dependencies from pip only (no conda)' %}
        eval "$(conda shell.bash hook)" && conda activate test
{% endif %}
        pytest -v --cov={{ cookiecutter.repo_name }} --cov-report=xml {{ cookiecutter.repo_name }}/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        token: {{ '${{ secrets.CODECOV_TOKEN }}' }}
        file: ./coverage.xml
        flags: unittests
        yml: ./.codecov.yml
